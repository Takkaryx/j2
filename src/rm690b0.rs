#![allow(dead_code)]

use embedded_graphics_core::pixelcolor::Rgb565;

static RM690B0_INIT_SEQUENCE_LENGTH: usize = 13;
static RM690B0_WIDTH: usize = 600;
static RM690B0_HEIGHT: usize = 450;
static RM690B0_MADCTL_MY: u8 = 0x80;
static RM690B0_MADCTL_MX: u8 = 0x40;
static RM690B0_MADCTL_MV: u8 = 0x20;
static RM690B0_MADCTL_ML: u8 = 0x10;
static RM690B0_MADCTL_RGB: u8 = 0x00;
static RM690B0_MADCTL_MH: u8 = 0x04;
static RM690B0_MADCTL_BGR: u8 = 0x08;

static AMOLED_DEFAULT_BRIGHTNESS: u8 = 175;

#[derive(Copy, Clone)]
#[repr(C, packed)]
struct LcdCmd {
    addr: u32,
    param: [u8; 20],
    len: u32,
}

const RM690B0_CMD: [LcdCmd; RM690B0_INIT_SEQUENCE_LENGTH] = [
    LcdCmd {
        addr: 0xFE,
        param: [
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x20,
        ],
        len: 0x01,
    }, //SET PAGE
    LcdCmd {
        addr: 0x26,
        param: [
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x0A,
        ],
        len: 0x01,
    }, //MIPI OFF
    LcdCmd {
        addr: 0x24,
        param: [
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x80,
        ],
        len: 0x01,
    }, //SPI write RAM
    LcdCmd {
        addr: 0x5A,
        param: [
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x51,
        ],
        len: 0x01,
    }, // 230918:SWIRE FOR BV6804
    LcdCmd {
        addr: 0x5B,
        param: [
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x2E,
        ],
        len: 0x01,
    }, // 230918:SWIRE FOR BV6804
    LcdCmd {
        addr: 0xFE,
        param: [
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        ],
        len: 0x01,
    }, //SET PAGE
    LcdCmd {
        addr: 0x3A,
        param: [
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x55,
        ],
        len: 0x01,
    }, //Interface Pixel Format    16bit/pixel
    LcdCmd {
        addr: 0xC2,
        param: [
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        ],
        len: 0x21,
    }, //delay_ms(10);
    LcdCmd {
        addr: 0x35,
        param: [
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        ],
        len: 0x01,
    }, //TE ON
    LcdCmd {
        addr: 0x51,
        param: [
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        ],
        len: 0x01,
    }, //Write Display Brightness  MAX_VAL=0XFF
    LcdCmd {
        addr: 0x11,
        param: [
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        ],
        len: 0x80,
    }, //Sleep Out delay_ms(120);
    LcdCmd {
        addr: 0x29,
        param: [
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        ],
        len: 0x20,
    }, //Display on delay_ms(10);
    LcdCmd {
        addr: 0x51,
        param: [
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0xFF,
        ],
        len: 0x01,
    }, //Write Display Brightness  MAX_VAL=0XFF
];

pub struct RM690B0;

impl RM690B0 {
    const FRAMEBUFFER_SIZE: (u16, u16) = (RM690B0_HEIGHT as u16, RM690B0_WIDTH as u16);

    pub fn init() {}
}
